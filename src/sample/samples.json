{
  "contexts": [
    {
      "matches":{
        "language": "java"
      },
      "values":{
        "WRAPPER": "DesiredCapabilities capabilities = new DesiredCapabilities();\n%{x}\n",
        "CAPABILITY_PLATFORM": "capabilities.setCapability(\"platform\", \"%{x}\");",
        "CAPABILITY_BROWSER_NAME": "capabilities.setCapability(\"browserName\", \"%{x}\");",
        "CAPABILITY_VERSION": "capabilities.setCapability(\"version\", \"%{x}\");",
        "CAPABILITY_RESOLUTION": "capabilities.setCapability(\"resolution\", \"%{x}\");",
        "CAPABILITY_API_KEY": "capabilities.setCapability(\"bitbar_apiKey\", \"%{x}\");",
        "CAPABILITY_API_KEY_UNDEFINED": "capabilities.setCapability(\"bitbar_apiKey\", \"<insert your Bitbar API key here>\");",
        "CAPABILITY_BITBAR_PROJECT": "capabilities.setCapability(\"bitbarProject\", \"%{x}\");",
        "CAPABILITY_BITBAR_TEST_RUN": "capabilities.setCapability(\"bitbar_testrun\", \"%{x}\");",
        "CAPABILITY_BITBAR_TEST_TIMEOUT": "capabilities.setCapability(\"bitbar_testTimeout\", \"%{x}\");",
        "CAPABILITY_BITBAR_MULTI_SESSION_WAIT": "capabilities.setCapability(\"bitbar_multiSessionWait\", \"%{x}\");",
        "REGEXP": "( *)\\/\\/ user-customizable parameters start here\\n([\\S\\s]*?)\\n.*\\/\\/",
        "SOURCE": "https://raw.githubusercontent.com/bitbar/bitbar-samples/master/samples/testing-frameworks/desktop-browsers/client-side/java/src/test/java/com/bitbar/selenium/BitbarSelenium.java",
        "SOURCE_XML": "https://raw.githubusercontent.com/bitbar/bitbar-samples/master/samples/testing-frameworks/desktop-browsers/client-side/java/pom.xml",
        "CAPABILITY_OS_TYPE": "capabilities.setCapability(\"osType\", \"%{x}\")",
        "CAPABILITY_DEVICE": "capabilities.setCapability(\"device\", \"%{x}\")",
        "CAPABILITY_USER_API_KEY": "capabilities.setCapability(\"userApiKey\", \"%{x}\")",
        "CAPABILITY_APP_PATH": "capabilities.setCapability(\"appPath\", \"%{x}\")",
        "CAPABILITY_APP_PACKAGE": "capabilities.setCapability(\"appPackage\", \"%{x}\")",
        "CAPABILITY_BUNDLE_ID": "capabilities.setCapability(\"bundleId\", \"%{x}\")",
        "CAPABILITY_AUTOMATION_NAME": "capabilities.setCapability(\"automationName\", \"%{x}\")",
        "CAPABILITY_APP_ACTIVITY": "capabilities.setCapability(\"appActivity\", \"%{x}\")",
        "CAPABILITY_APPIUM_BROKER_URL": "capabilities.setCapability(\"appiumBrokerUrl\", \"%{x}\")",
        "CAPABILITY_SCREENSHOT_DIR": "capabilities.setCapability(\"screenshotDir\", \"%{x}\")",
        "CAPABILITY_PROJECT_NAME": "capabilities.setCapability(\"projectName\", \"%{x}\")",
        "CAPABILITY_TEST_RUN_NAME": "capabilities.setCapability(\"testRunName\", \"%{x}\")"

      }
    },
    {
      "matches":{
        "language": "python"
      },
      "values":{
        "WRAPPER": "capabilities = {\n%{x}\n}",
        "CAPABILITY_PLATFORM": "\t'platform': '%{x}',",
        "CAPABILITY_BROWSER_NAME": "\t'browserName': '%{x}',",
        "CAPABILITY_VERSION": "\t'version': '%{x}',",
        "CAPABILITY_RESOLUTION": "\t'resolution': '%{x}',",
        "CAPABILITY_API_KEY": "\t'bitbar_apiKey': '%{x}',",
        "CAPABILITY_API_KEY_UNDEFINED": "\t'bitbar_apiKey': '<insert your Bitbar API key here>',",
        "CAPABILITY_BITBAR_PROJECT": "\t'bitbarProject': '%{x}'",
        "CAPABILITY_BITBAR_TEST_RUN": "\t'bitbar_testrun': '%{x}'",
        "CAPABILITY_BITBAR_TEST_TIMEOUT": "\t'bitbar_testTimeout': '%{x}'",
        "CAPABILITY_BITBAR_MULTI_SESSION_WAIT": "\t'bitbar_multiSessionWait': '%{x}'",
        "CAPABILITY_BITBAR_PROJECT": "\t'bitbarProject': '%{x}',",
        "CAPABILITY_BITBAR_TEST_RUN": "\t'bitbar_testrun': '%{x}',",
        "CAPABILITY_BITBAR_TEST_TIMEOUT": "\t'bitbar_testTimeout': '%{x}',",
        "CAPABILITY_BITBAR_MULTI_SESSION_WAIT": "\t'bitbar_multiSessionWait': '%{x}'",
        "REGEXP": "( *)# user-customizable parameters start here\\n([\\S\\s]*})",
        "SOURCE": "https://raw.githubusercontent.com/bitbar/bitbar-samples/master/samples/testing-frameworks/desktop-browsers/client-side/python/bitbar_selenium.py",
        "SOURCE_1": "https://raw.githubusercontent.com/bitbar/bitbar-samples/master/samples/testing-frameworks/desktop-browsers/client-side/NodeJS/package-lock.json",
        "SOURCE_2": "https://raw.githubusercontent.com/bitbar/bitbar-samples/master/samples/testing-frameworks/desktop-browsers/client-side/NodeJS/package.json",
        "CAPABILITY_OS_TYPE": "\t'osType': '%{x}'",
        "CAPABILITY_DEVICE": "\t'device': '%{x}'",
        "CAPABILITY_USER_API_KEY": "\t'userApiKey': '%{x}'",
        "CAPABILITY_APP_PATH": "\t'appPath': '%{x}'",
        "CAPABILITY_APP_PACKAGE": "\t'appPackage': '%{x}'",
        "CAPABILITY_BUNDLE_ID": "\t'bundleId': '%{x}'",
        "CAPABILITY_AUTOMATION_NAME": "\t'automationName': '%{x}'",
        "CAPABILITY_APP_ACTIVITY": "\t'appActivity': '%{x}'",
        "CAPABILITY_APPIUM_BROKER_URL": "\t'appiumBrokerUrl': '%{x}'",
        "CAPABILITY_SCREENSHOT_DIR": "\t'screenShotDir': '%{x}'",
        "CAPABILITY_PROJECT_NAME": "\t'projectName': '%{x}'",
        "CAPABILITY_TEST_RUN_NAME": "\t'testRunName': '%{x}'"

      }
    },
    {
      "matches":{
        "language": "nodeJs"
      },
      "values":{
        "WRAPPER": "var capabilities = {\n%{x}\n}",
        "CAPABILITY_PLATFORM": "\t'platform': '%{x}',",
        "CAPABILITY_BROWSER_NAME": "\t'browserName': '%{x}',",
        "CAPABILITY_VERSION": "\t'version': '%{x}',",
        "CAPABILITY_RESOLUTION": "\t'resolution': '%{x}',",
        "CAPABILITY_API_KEY": "\t'bitbar_apiKey': '%{x}',",
        "CAPABILITY_API_KEY_UNDEFINED": "\t'bitbar_apiKey': '<insert your Bitbar API key here>',",
        "CAPABILITY_BITBAR_PROJECT": "\t'bitbarProject': '%{x}',",
        "CAPABILITY_BITBAR_TEST_RUN": "\t'bitbar_testrun': '%{x}',",
        "CAPABILITY_BITBAR_TEST_TIMEOUT": "\t'bitbar_testTimeout': '%{x}',",
        "CAPABILITY_BITBAR_MULTI_SESSION_WAIT": "\t'bitbar_multiSessionWait': '%{x}'",
        "REGEXP": "( *)\\/\\/ user-customizable parameters start here\\n([\\S\\s]*?)\\n.*\\/\\/",
        "SOURCE": "https://raw.githubusercontent.com/bitbar/bitbar-samples/master/samples/testing-frameworks/desktop-browsers/client-side/NodeJS/bitbar_selenium.js",
        "SOURCE_1": "https://raw.githubusercontent.com/bitbar/bitbar-samples/master/samples/testing-frameworks/desktop-browsers/client-side/NodeJS/package-lock.json",
        "SOURCE_2": "https://raw.githubusercontent.com/bitbar/bitbar-samples/master/samples/testing-frameworks/desktop-browsers/client-side/NodeJS/package.json",
        "CAPABILITY_OS_TYPE": "\t'osType': '%{x}',",
        "CAPABILITY_DEVICE": "\t'device': '%{x}',",
        "CAPABILITY_USER_API_KEY": "\t'userApiKey': '%{x}',",
        "CAPABILITY_APP_PATH": "\t'appPath': '%{x}',",
        "CAPABILITY_APP_PACKAGE": "\t'appPackage': '%{x}',",
        "CAPABILITY_BUNDLE_ID": "\t'bundleId': '%{x}',",
        "CAPABILITY_AUTOMATION_NAME": "\t'automationName': '%{x}',",
        "CAPABILITY_APP_ACTIVITY": "\t'appActivity': '%{x}',",
        "CAPABILITY_APPIUM_BROKER_URL": "\t'appiumBrokerUrl': '%{x}',",
        "CAPABILITY_SCREENSHOT_DIR": "\t'screenshotDir': '%{x}',",
        "CAPABILITY_PROJECT_NAME": "\t'projectName': '%{x}',",
        "CAPABILITY_TEST_RUN_NAME": "\t'testRunName': '%{x}'"
      }
    },
    {
      "matches":{
        "language": "C#"
      },
      "values": {
        "WRAPPER": "DesiredCapabilities capabilities = new DesiredCapabilities();\n%{x}\n",
        "CAPABILITY_PLATFORM": "capabilities.SetCapability('platform', '%{x}');",
        "CAPABILITY_BROWSER_NAME": "capabilities.SetCapability('browserName', '%{x}');",
        "CAPABILITY_VERSION": "capabilities.SetCapability('version', '%{x}');",
        "CAPABILITY_RESOLUTION": "capabilities.SetCapability('resolution', '%{x}');",
        "CAPABILITY_API_KEY": "capabilities.SetCapability('bitbar_apiKey', '%{x}');",
        "CAPABILITY_API_KEY_UNDEFINED": "capabilities.SetCapability('bitbar_apiKey', '<insert your Bitbar API key here>')",
        "CAPABILITY_BITBAR_PROJECT": "capabilities.SetCapability('bitbarProject', '%{x}');",
        "CAPABILITY_BITBAR_TEST_RUN": "\t'bitbar_testrun' => '%{x}'",
        "CAPABILITY_BITBAR_TEST_TIMEOUT": "\t 'bitbar_testTimeout' => '%{x}'",
        "CAPABILITY_BITBAR_MULTI_SESSION_WAIT": "\t 'bitbar_multiSessionWait' => '%{x}'",
        "REGEXP": "",
        "SOURCE": "",

        "CAPABILITY_OS_TYPE": "capabilities.SetCapability('osType', '%{x}');",
        "CAPABILITY_DEVICE": "capabilities.SetCapability('device', '%{x}');",
        "CAPABILITY_USER_API_KEY": "capabilities.SetCapability('userApiKey', '%{x}');",
        "CAPABILITY_APP_PATH": "capabilities.SetCapability('appPath', '%{x}');",
        "CAPABILITY_APP_PACKAGE": "capabilities.SetCapability('appPackage', '%{x}');",
        "CAPABILITY_BUNDLE_ID": "capabilities.SetCapability('bundleId', '%{x}');",
        "CAPABILITY_AUTOMATION_NAME": "capabilities.SetCapability('automationName', '%{x}');",
        "CAPABILITY_APP_ACTIVITY": "capabilities.SetCapability('appActivity', '%{x}');",
        "CAPABILITY_APPIUM_BROKER_URL": "capabilities.SetCapability('appiumBrokerUrl', '%{x}');",
        "CAPABILITY_SCREENSHOT_DIR": "capabilities.SetCapability('screenshotDir', '%{x}');",
        "CAPABILITY_PROJECT_NAME": "capabilities.SetCapability('projectName', '%{x}');",
        "CAPABILITY_TEST_RUN_NAME": "capabilities.SetCapability('testRunName', '%{x}');"
      }
    },
    {
      "matches":{
        "language": "php"
      },
      "values":{
        "WRAPPER": "$capabilities = array(\n%{x}\n);",
        "CAPABILITY_PLATFORM": "\t'platform' => '%{x}';",
        "CAPABILITY_BROWSER_NAME": "\t'browserName' => '%{x}';",
        "CAPABILITY_VERSION": "\t'version' => '%{x}';",
        "CAPABILITY_RESOLUTION": "\t'resolution' => '%{x}';",
        "CAPABILITY_API_KEY": "\t'bitbar_apiKey' => '%{x}';",
        "CAPABILITY_API_KEY_UNDEFINED": "\t'bitbar_apiKey' => '<insert your Bitbar API key here>'",
        "CAPABILITY_BITBAR_PROJECT": "\t'bitbarProject' => '%{x}'",
        "REGEXP": "",
        "SOURCE": ""
      }
    },
    {
      "matches":{
        "language": "ruby"
      },
      "values":{
        "WRAPPER": "capabilities = Selenium::WebDriver::Remote::Capabilities.new\n%{x}\n",
        "CAPABILITY_PLATFORM": "capabilities['platform'] = '%{x}'",
        "CAPABILITY_BROWSER_NAME": "capabilities['browserName'] = '%{x}'",
        "CAPABILITY_VERSION": "capabilities['version'] = '%{x}'",
        "CAPABILITY_RESOLUTION": "capabilities['resolution'] = '%{x}'",
        "CAPABILITY_API_KEY": "capabilities['bitbar_apiKey'] = '%{x}'",
        "CAPABILITY_API_KEY_UNDEFINED": "capabilities['bitbar_apiKey'] = '<insert your Bitbar API key here>'",
        "CAPABILITY_BITBAR_PROJECT": "capabilities['bitbarProject'] = '%{x}'",
        "CAPABILITY_BITBAR_TEST_RUN": "capabilities['bitbar_testrun'] = '%{x}'",
        "CAPABILITY_BITBAR_TEST_TIMEOUT": "capabilities['bitbar_testTimeout'] = '%{x}'",
        "CAPABILITY_BITBAR_MULTI_SESSION_WAIT": "capabilities['bitbar_multiSessionWait'] = '%{x}'",
        "REGEXP": "( *)# user-customizable parameters start here\n([\\S\\s]*?)\n.*#",
        "SOURCE": "https://raw.githubusercontent.com/bitbar/bitbar-samples/master/samples/testing-frameworks/desktop-browsers/client-side/ruby/bitbar_selenium.rb",
        "SOURCE_GEMFILE": "https://raw.githubusercontent.com/bitbar/bitbar-samples/master/samples/testing-frameworks/desktop-browsers/client-side/ruby/Gemfile",

        "CAPABILITY_OS_TYPE": "capabilities['osType'] = '%{x}'",
        "CAPABILITY_DEVICE": "capabilities['device'] = '%{x}'",
        "CAPABILITY_USER_API_KEY": "capabilities['userApiKey'] = '%{x}'",
        "CAPABILITY_APP_PATH": "capabilities['appPath'] = '%{x}'",
        "CAPABILITY_APP_PACKAGE": "capabilities['appPackage'] = '%{x}'",
        "CAPABILITY_BUNDLE_ID": "capabilities['bundleId'] = '%{x}'",
        "CAPABILITY_AUTOMATION_NAME": "capabilities['automationName'] = '%{x}'",
        "CAPABILITY_APP_ACTIVITY": "capabilities['appActivity'] = '%{x}'",
        "CAPABILITY_APPIUM_BROKER_URL": "capabilities['appiumBrokerUrl'] = '%{x}'",
        "CAPABILITY_SCREENSHOT_DIR": "capabilities['acreenshotDir'] = '%{x}'",
        "CAPABILITY_PROJECT_NAME": "capabilities['projectName'] = '%{x}'",
        "CAPABILITY_TEST_RUN_NAME": "capabilities['testRunName'] = '%{x}'"
      }
    }
  ]
}